{"version":3,"sources":["index.js"],"names":["HOST","cleanupModal","setModalLoader","setModalTitle","setModalInputArea","setModalInputPlaceHolder","setModalInputValue","openModal","targetElement","callBack","console","log","modal","document","querySelector","overlay","modalCloseButton","classList","remove","addEventListener","add","removeEventListener","title","modalTitleNode","innerHTML","getModalUserInput","value","getInputValue","selector","visibility","placeholderString","setAttribute","validatePhoneNumber","phoneNumber","test","setModalErrorMessage","error","errorMessage","onSubmitButtonClicked","removeSubmitEventListener","fn","sendOtp","target","targetInputSelector","id","fetch","then","resp","json","code","collectOTP","catch","otp","verifyOTP","currentLocation","params","URL","window","location","searchParams","payload","utm_campaign","get","utm_medium","utm_source","method","headers","body","JSON","stringify","data","user","email","thankUser","collectEmail","token","submitEmail","encodeURIComponent","onload","navOpenButton","navLinks","navCloseButton","getAccessButtons","querySelectorAll","setTimeout","forEach","button","e"],"mappings":"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","file":"src.b9db384c.js","sourceRoot":"..\\src","sourcesContent":["import \"./styles.scss\";\nconst HOST = 'https://stage.savemo.app';\n\nwindow.onload = () => {\n    let navOpenButton = document.querySelector('#navOpenButton');\n    let navLinks = document.querySelector('#navLinks');\n    let navCloseButton = document.querySelector('#navCloseButton');\n\n    let getAccessButtons = document.querySelectorAll('#getAccessHero, #getAccessBanner');\n\n    navOpenButton.addEventListener('click', function () {\n        navOpenButton.setAttribute('aria-expanded', \"true\");\n        navLinks.classList.add('duration-150')\n        navLinks.classList.remove('hidden');\n        setTimeout(function () {\n            navLinks.classList.add('opacity-100', 'scale-100');\n            navLinks.classList.remove('opacity-0', 'scale-95');\n        }, 2);\n    });\n\n    navCloseButton.addEventListener('click', () => {\n        navOpenButton.setAttribute('aria-expanded', \"false\");\n        navLinks.classList.remove('duration-150', 'opacity-100', 'scale-100');\n        navLinks.classList.add('duration-100', 'opacity-0', 'scale-95');\n\n        setTimeout(() => {\n            navLinks.classList.add('hidden');\n        }, 150);\n    });\n\n    getAccessButtons && getAccessButtons.forEach((button) => {\n        button.addEventListener('click', (e) => {\n            openModal(e.target, sendOtp);\n        });\n    });\n};\n\nfunction cleanupModal () {\n    setModalLoader(false);\n    setModalTitle(false);\n    setModalInputArea(false);\n    setModalInputPlaceHolder(\"\");\n    setModalInputValue(\"\");\n}\n\nfunction openModal (targetElement, callBack) {\n    console.log('Showing modal');\n\n    let modal = document.querySelector('#modal');\n    let overlay = document.querySelector('#modalOverlay');\n    let modalCloseButton = document.querySelector('#closeModal');\n\n    callBack && callBack(targetElement);\n\n    modal.classList.remove('hidden');\n    overlay.classList.remove('hidden');\n\n    modalCloseButton.addEventListener('click', function () {\n        modal.classList.add('hidden');\n        overlay.classList.add('hidden');\n\n        cleanupModal();\n\n        modalCloseButton.removeEventListener('click', this);\n    });\n}\n\nfunction setModalTitle (title) {\n    let modalTitleNode = document.querySelector('#modalTitle');\n    modalTitleNode.innerHTML = title;\n\n    if (title)\n        modalTitleNode.classList.remove('hidden');\n    else\n        modalTitleNode.classList.add('hidden');\n}\n\nfunction getModalUserInput () {\n    return document.querySelector('#userInput').value;\n}\n\nfunction getInputValue (selector) {\n    return document.querySelector(selector)?.value;\n}\n\nfunction setModalLoader (visibility) {\n    if (visibility)\n        document.querySelector('#modalLoader').classList.remove('hidden');\n    else\n        document.querySelector('#modalLoader').classList.add('hidden');\n}\n\nfunction setModalInputPlaceHolder (placeholderString) {\n    document.querySelector(\"#userInput\").setAttribute(\"placeholder\", placeholderString);\n}\n\nfunction validatePhoneNumber (phoneNumber) {\n    return /\\d{10,10}/.test(phoneNumber);\n}\n\nfunction setModalErrorMessage (error) {\n    let errorMessage = document.querySelector('#modalErrorMessage');\n    errorMessage.innerHTML = error;\n\n    if (error)\n        errorMessage.classList.remove('hidden');\n    else\n        errorMessage.classList.add('hidden');\n}\n\nfunction setModalInputArea (visibility) {\n    if (visibility) {\n        document.querySelector('#inputArea').classList.remove('hidden');\n    } else {\n        document.querySelector('#inputArea').classList.add('hidden');\n    }\n}\n\nfunction onSubmitButtonClicked (callBack) {\n    const userInput = document.querySelector('#userInputSubmit');\n    userInput.addEventListener('click', callBack);\n}\n\nfunction removeSubmitEventListener (fn) {\n    const userInput = document.querySelector('#userInputSubmit');\n    userInput.removeEventListener('click', fn);\n}\n\nfunction setModalInputValue (value) {\n    document.querySelector('#userInput').value = value;\n}\n\nfunction sendOtp (target) {\n    const targetInputSelector = `#${target.id}-input`;\n\n    const phoneNumber = getInputValue(targetInputSelector);\n\n    if (!validatePhoneNumber(phoneNumber)) {\n        setModalTitle(\"Please enter a valid phone number and try again\");\n        return\n    }\n\n    setModalLoader(true);\n    // let value = getModalUserInput();\n    fetch(`${HOST}/waitlist/send_otp/${phoneNumber}`)\n    .then(resp => resp.json())\n    .then(resp => {\n        setModalLoader(false);\n        console.log(resp);\n\n        if (resp.code === 2000) {\n            collectOTP(phoneNumber);\n        } else {\n            setModalErrorMessage(\"Something went wrong from our side\");\n        }\n    })\n    .catch(resp => {\n        setModalLoader(false);\n        setModalErrorMessage(\"Something went wrong. Failed to submit phone number\");\n    });\n}\n\nfunction collectOTP (phoneNumber) {\n    setModalTitle(\"Let's verify your number\");\n    setModalInputArea(true);\n    setModalInputPlaceHolder(\"OTP\");\n\n    onSubmitButtonClicked(function () {\n        const otp = getModalUserInput();\n\n        if (otp) {\n            verifyOTP(otp, phoneNumber);\n            removeSubmitEventListener(this);\n        } else {\n            setModalErrorMessage(\"Invalid OTP\");\n        }\n    });\n}\n\n\nfunction verifyOTP (otp, phoneNumber) {\n    const currentLocation = new URL(window.location);\n    const params = currentLocation.searchParams;\n    const payload = {\n        otp,\n        utm_campaign: params.get('utm_campaign'),\n        utm_medium: params.get('utm_medium'),\n        utm_source: params.get('utm_source')\n    };\n\n    setModalLoader(true);\n\n    fetch(`${HOST}/waitlist/${phoneNumber}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n    })\n    .then(resp => resp.json())\n    .then(resp => {\n        setModalLoader(false);\n\n        console.log(resp);        \n        if (resp.code === 2000) {\n            if (!resp.data?.user?.email) {\n                collectEmail(phoneNumber, resp.data.token);\n            } else {\n                thankUser();\n            }\n        } else {\n            setModalErrorMessage(\"Invalid OTP\");\n        }\n    })\n    .catch(() => {\n        setModalLoader(false);\n        setModalErrorMessage(\"Something went wrong while submitting OTP\");\n    });\n}\n\nfunction collectEmail (phoneNumber, token) {\n    setModalTitle(\"Email\");\n    setModalErrorMessage(\"\");\n    setModalInputValue(\"\");\n\n    setModalInputPlaceHolder(\"Email\");\n\n    onSubmitButtonClicked(function () {\n        const email = getModalUserInput();\n\n        if (email) {\n            submitEmail(email, phoneNumber, token);\n            removeSubmitEventListener(this);\n        } else {\n            setModalErrorMessage(\"Invalid email\");\n        }\n    });\n}\n\nfunction submitEmail (email, phoneNumber, token) {\n    const payload = {\n        token\n    };\n\n    setModalLoader(true);\n\n    fetch(`${HOST}/${phoneNumber}/${window.encodeURIComponent(email)}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n    })\n    .then(resp => resp.json())\n    .then(resp => {\n        if (resp.code === 2000) {\n            thankUser();\n        } else {\n            setModalErrorMessage(\"Error while submitting email\");\n        }\n    })\n}\n\nfunction thankUser () {\n    setModalInputArea(false);\n    setModalErrorMessage(\"\");\n    setModalTitle(\"You've been added to the waiting list\");\n}"]}