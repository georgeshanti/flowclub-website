{"version":3,"sources":["index.js"],"names":["modalClose","phoneNumberTextBox","HOST","cleanupModal","setModalLoader","setModalTitle","setModalInputArea","setModalInputPlaceHolder","setModalInputValue","setModalInfoMessage","setModalErrorMessage","openModal","targetElement","callBack","modal","document","querySelector","overlay","modalCloseButton","classList","remove","setTimeout","add","originalElement","clonedElement","cloneNode","parentNode","replaceChild","removeEventListener","addEventListener","title","modalTitleNode","innerHTML","getModalUserInput","value","getInputValue","selector","visibility","placeholderString","setAttribute","validatePhoneNumber","phoneNumber","test","trim","error","errorMessage","onSubmitButtonClicked","removeSubmitEventListener","fn","message","messageArea","sendOtp","target","targetInputSelector","id","fetch","then","resp","json","code","collectOTP","catch","validateOTP","otp","onOTPSubmitCallback","e","preventDefault","verifyOTP","isSuccessful","currentLocation","params","URL","window","location","searchParams","payload","utm_campaign","get","utm_medium","utm_source","method","headers","body","JSON","stringify","data","user","email","thankUser","collectEmail","token","validateEmail","onEmailSubmitCallback","submitEmail","encodeURIComponent","inputNode","onload","navOpenButton","navLinks","navCloseButton","getAccessForms","querySelectorAll","forEach","button"],"mappings":"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","file":"src.e73acf08.js","sourceRoot":"..\\src","sourcesContent":["import \"./styles.scss\";\nconst HOST = 'https://prod.savemo.app';\n\nwindow.onload = () => {\n    let navOpenButton = document.querySelector('#navOpenButton');\n    let navLinks = document.querySelector('#navLinks');\n    let navCloseButton = document.querySelector('#navCloseButton');\n\n    let getAccessForms = document.querySelectorAll('#getAccessHero, #getAccessBanner1, #getAccessBanner2');\n\n    navOpenButton.addEventListener('click', function () {\n        navOpenButton.setAttribute('aria-expanded', \"true\");\n        navLinks.classList.add('duration-150', 'ease-out')\n        navLinks.classList.remove('hidden');\n        setTimeout(function () {\n            navLinks.classList.add('opacity-100', 'scale-100');\n            navLinks.classList.remove('opacity-0', 'scale-95');\n        }, 2);\n    });\n\n    navCloseButton.addEventListener('click', () => {\n        navOpenButton.setAttribute('aria-expanded', \"false\");\n        navLinks.classList.remove('duration-150', 'ease-out', 'opacity-100', 'scale-100');\n        navLinks.classList.add('duration-100', 'ease-in', 'opacity-0', 'scale-95');\n\n        setTimeout(() => {\n            navLinks.classList.add('hidden');\n        }, 150);\n    });\n\n    getAccessForms && getAccessForms.forEach((button) => {\n        button.addEventListener('submit', (e) => {\n            e.preventDefault();\n            openModal(e.target, sendOtp);\n        });\n    });\n};\n\nlet modalClose, phoneNumberTextBox;\n\nfunction cleanupModal () {\n    setModalLoader(false);\n    setModalTitle(false);\n    setModalInputArea(false);\n    setModalInputPlaceHolder(\"\");\n    setModalInputValue(\"\");\n    setModalInfoMessage(\"\");\n    setModalErrorMessage(\"\");\n}\n\nfunction openModal (targetElement, callBack) {\n    let modal = document.querySelector('#modal');\n    let overlay = document.querySelector('#modalOverlay');\n    let modalCloseButton = document.querySelector('#closeModal');\n\n    phoneNumberTextBox = targetElement;\n\n    modal.classList.remove('hidden');\n    overlay.classList.remove('hidden');\n\n    setTimeout(() => {\n        modal.classList.add('duration-150', 'ease-out', 'opacity-100', 'scale-100');\n        overlay.classList.add('duration-150', 'ease-out', 'opacity-80');\n\n        modal.classList.remove('opacity-0', 'scale-95');\n        overlay.classList.remove('opacity-0');\n    }, 2);\n\n    modalClose = () => {\n\n        modal.classList.remove('opacity-100', 'scale-100', 'duration-150', 'ease-out');\n        overlay.classList.remove('opacity-80', 'duration-150', 'ease-out');\n\n        modal.classList.add('duration-100', 'ease-in', 'opacity-0', 'scale-95');\n        overlay.classList.add('duration-100', 'ease-in', 'opacity-0');\n\n        setTimeout(() => {\n            modal.classList.add('hidden');\n            overlay.classList.add('hidden');\n\n            let originalElement = document.querySelector(\"#modal\");\n            let clonedElement = originalElement.cloneNode(true);\n            originalElement.parentNode.replaceChild(clonedElement, originalElement);\n        }, 150);\n\n        cleanupModal();\n\n        modalCloseButton.removeEventListener('click', modalClose);\n    };\n\n    modalCloseButton.addEventListener('click', modalClose);\n\n    callBack && callBack(targetElement);\n\n}\n\nfunction setModalTitle (title) {\n    let modalTitleNode = document.querySelector('#modalTitle');\n    modalTitleNode.innerHTML = title;\n\n    if (title)\n        modalTitleNode.classList.remove('hidden');\n    else\n        modalTitleNode.classList.add('hidden');\n}\n\nfunction getModalUserInput () {\n    return document.querySelector('#userInput').value;\n}\n\nfunction getInputValue (selector) {\n    return document.querySelector(selector)?.value;\n}\n\nfunction setModalLoader (visibility) {\n    if (visibility)\n        document.querySelector('#modalLoader').classList.remove('hidden');\n    else\n        document.querySelector('#modalLoader').classList.add('hidden');\n}\n\nfunction setModalInputPlaceHolder (placeholderString) {\n    document.querySelector(\"#userInput\").setAttribute(\"placeholder\", placeholderString);\n}\n\nfunction validatePhoneNumber (phoneNumber) {\n    return phoneNumber && /^\\d{10,10}$/.test(phoneNumber.trim());\n}\n\nfunction setModalErrorMessage (error) {\n    let errorMessage = document.querySelector('#modalErrorMessage');\n    errorMessage.innerHTML = error;\n\n    if (error)\n        errorMessage.classList.remove('hidden');\n    else\n        errorMessage.classList.add('hidden');\n}\n\nfunction setModalInputArea (visibility) {\n    if (visibility) {\n        document.querySelector('#inputArea').classList.remove('hidden');\n    } else {\n        document.querySelector('#inputArea').classList.add('hidden');\n    }\n}\n\nfunction onSubmitButtonClicked (callBack) {\n    const userInput = document.querySelector('#userInputSubmit');\n    userInput.addEventListener('submit', callBack);\n}\n\nfunction removeSubmitEventListener (fn) {\n    const userInput = document.querySelector('#userInputSubmit');\n    userInput.removeEventListener('submit', fn);\n}\n\nfunction setModalInputValue (value) {\n    document.querySelector('#userInput').value = value;\n}\n\nfunction setModalInfoMessage (message) {\n    const messageArea = document.querySelector('#modalMessage');\n    messageArea.innerHTML = message;\n\n    if (message) {\n        messageArea.classList.remove('hidden');\n    } else {\n        messageArea.classList.add('hidden');\n    }\n}\n\nfunction sendOtp (target) {\n    const targetInputSelector = `#${target.id}-input`;\n\n    const phoneNumber = getInputValue(targetInputSelector);\n\n    if (!validatePhoneNumber(phoneNumber)) {\n        setModalTitle(\"Please enter a valid phone number and try again\");\n        return\n    }\n\n    setModalLoader(true);\n\n    fetch(`${HOST}/waitlist/send_otp/${phoneNumber}`)\n    .then(resp => resp.json())\n    .then(resp => {\n        setModalLoader(false);\n\n        if (resp.code === 2000) {\n            collectOTP(phoneNumber);\n\n            return true;\n        } else {\n            setModalErrorMessage(\"Something went wrong from our end. Please try again later\");\n        }\n    })\n    .catch(resp => {\n        setModalLoader(false);\n        setModalErrorMessage(\"Something went wrong. Failed to submit phone number\");\n    });\n}\n\nfunction validateOTP (otp) {\n    return otp && /^\\d{4,4}$/.test(otp.trim());\n}\n\nfunction collectOTP (phoneNumber) {\n    setModalTitle(\"Let's verify your number\");\n    setModalInputArea(true);\n    setModalInputPlaceHolder(\"OTP\");\n\n    const onOTPSubmitCallback = (e) => {\n        e.preventDefault();\n        const otp = getModalUserInput();\n\n        if (validateOTP(otp)) {\n            verifyOTP(otp, phoneNumber)\n            .then((isSuccessful) => {\n                isSuccessful && removeSubmitEventListener(onOTPSubmitCallback);\n            });\n        } else {\n            setModalErrorMessage(\"Invalid OTP\");\n        }\n    };\n\n    onSubmitButtonClicked(onOTPSubmitCallback);\n}\n\n\nfunction verifyOTP (otp, phoneNumber) {\n    const currentLocation = new URL(window.location);\n    const params = currentLocation.searchParams;\n    const payload = {\n        otp,\n        utm_campaign: params.get('utm_campaign'),\n        utm_medium: params.get('utm_medium'),\n        utm_source: params.get('utm_source')\n    };\n\n    setModalInputArea(false);\n    setModalLoader(true);\n\n    return fetch(`${HOST}/waitlist/${phoneNumber}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n    })\n    .then(resp => resp.json())\n    .then(resp => {\n        setModalLoader(false);\n\n        if (resp.code === 2000) {\n            if (!resp.data?.user?.email) {\n                collectEmail(phoneNumber, resp.data.token);\n            } else {\n                thankUser();\n            }\n            \n            return true;\n        } else {\n            setModalInputArea(true);\n            setModalErrorMessage(\"Invalid OTP\");\n        }\n    })\n    .catch(() => {\n        setModalLoader(false);\n        setModalInputArea(true);\n        setModalErrorMessage(\"Something went wrong while submitting OTP\");\n    });\n}\n\nfunction validateEmail (email) {\n    return email && /^.+@.+$/.test(email);\n}\n\nfunction collectEmail (phoneNumber, token) {\n    setModalTitle(\"Email\");\n    setModalInputArea(true);\n    setModalErrorMessage(\"\");\n    setModalInputValue(\"\");\n\n    setModalInputPlaceHolder(\"Email\");\n\n    const onEmailSubmitCallback = (e) => {\n        e.preventDefault();\n        const email = getModalUserInput();\n\n        if (validateEmail(email)) {\n            submitEmail(email, phoneNumber, token)\n            .then((isSuccessful) => {\n                isSuccessful && removeSubmitEventListener(onEmailSubmitCallback);\n            });\n        } else {\n            setModalErrorMessage(\"Invalid email\");\n        }\n    };\n\n    onSubmitButtonClicked(onEmailSubmitCallback);\n}\n\nfunction submitEmail (email, phoneNumber, token) {\n    const payload = {\n        token\n    };\n\n    setModalInputArea(false);\n    setModalLoader(true);\n\n    return fetch(`${HOST}/waitlist/${phoneNumber}/${window.encodeURIComponent(email)}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n    })\n    .then(resp => resp.json())\n    .then(resp => {\n        setModalLoader(false);\n        if (resp.code === 2000) {\n            thankUser();\n\n            return true;\n        } else {\n            setModalInputArea(true);\n            setModalErrorMessage(\"Error while submitting email\");\n        }\n    })\n    .catch(() => {\n        setModalInputArea(true);\n        setModalLoader(false)\n        setModalErrorMessage(\"Failed to submit email\")\n    });\n}\n\nfunction thankUser () {\n    setModalInputArea(false);\n    setModalErrorMessage(\"\");\n    setModalTitle(\"All done!\");\n    setModalInfoMessage(\"You've been added to the waitlist\");\n\n    if(phoneNumberTextBox) {\n        // Clear phone number after everything is successful\n        const selector = `#${phoneNumberTextBox.id}-input`;\n        const inputNode = document.querySelector(selector);\n\n        if (inputNode) {\n            inputNode.value = \"\";\n        }\n    }\n\n    setTimeout(() => {\n        \n        modalClose && modalClose();\n    }, 3000);\n}"]}